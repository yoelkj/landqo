---
import BaseLayout from "@/layouts/BaseLayout.astro";
import pageSections from "@/content/pages/index";
import { sectionsRegistry, type SectionKey } from "@/utils/section-map";

const seo = {
  // Copys afinados
  title: "Landqo — Tu landing lista en días, no en semanas",
  description:
    "Creamos landings que convierten: copy claro, diseño a medida, SEO técnico, velocidad 95+ en Lighthouse y analítica desde el día uno. Entrega en días.",
  image: "/assets/og-image.png",
  imageAlt: "Landqo: tu landing lista en días, no en semanas",
  type: "website",
  lang: "es",
  siteName: "Landqo",
  // Importante: indexable (no poner noindex aquí)
  noindex: false,
  schema: {
    "@context": "https://schema.org",
    "@type": "Organization",
    name: "Landqo",
    url: Astro.site
      ? String(Astro.site)
      : import.meta.env.PUBLIC_SITE_URL || undefined,
    logo: "/assets/icons/isotype.png",
    contactPoint: [
      {
        "@type": "ContactPoint",
        contactType: "sales",
        email: import.meta.env.PUBLIC_CONTACT_EMAIL || undefined,
        telephone: import.meta.env.PUBLIC_CONTACT_PHONE || undefined,
        availableLanguage: (import.meta.env.PUBLIC_SUPPORTED_LANGS || "es")
          .split(",")
          .map((s: string) => s.trim()),
      },
    ],
  },
};

type ResolvedSection = {
  key: SectionKey | string;
  Comp: any | null;
  props?: Record<string, any>;
  error?: string | null;
};

const resolved: ResolvedSection[] = await Promise.all(
  pageSections.map(async ({ key, props }) => {
    const entry = sectionsRegistry[key as SectionKey];
    if (!entry || typeof entry.component !== "function") {
      const error = `Sección "${key}" no está registrada en sectionsRegistry.`;
      console.warn("[sectionsRegistry]", error);
      return { key, Comp: null, props, error };
    }
    try {
      const mod = await entry.component();
      const Comp = mod?.default ?? null;
      if (!Comp) {
        const error = `Sección "${key}" no exporta 'default'.`;
        console.error("[sectionsRegistry]", error);
        return { key, Comp: null, props, error };
      }
      return { key, Comp, props, error: null };
    } catch (e) {
      const error = `Error importando "${key}": ${String(e)}`;
      console.error("[sectionsRegistry]", error);
      return { key, Comp: null, props, error };
    }
  })
);
---

<BaseLayout seo={seo}>
  {
    resolved.map(({ Comp, key, props, error }) =>
      error || !Comp ? (
        <div data-key={key} class="container mx-auto my-6 text-sm text-red-600">
          <strong>Error en sección "{key}":</strong> {error}
        </div>
      ) : (
        // @ts-ignore
        <Comp {...(props || {})} data-key={key} />
      )
    )
  }
</BaseLayout>
