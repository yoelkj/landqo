---
import Section from "@/components/ui/Section.astro";
import type { BaseSectionProps, Variant } from "@/utils/section-types";

type StepItem = string | { title: string; desc?: string };

interface Props extends BaseSectionProps {
  title?: string;
  subtitle?: string;
  steps?: StepItem[];
  variant?: Variant;
  media?: { image?: string; alt?: string } | null;
  className?: string;
}

const {
  id = "process",
  title = "Proceso",
  subtitle = "De cero a publicado, rápido y sin fricción.",
  steps = ["Brief", "UX & Copy", "Diseño UI", "Implementación"],
  variant = "default" as Variant,
  className = "",
  media = null,
} = Astro.props as Props;

const list = (steps || []).map((s) =>
  typeof s === "string" ? { title: s } : s
);
const num = (i: number) => String(i + 1).padStart(2, "0");
---

<Section
  id={id}
  title={title}
  subtitle={subtitle}
  variant={variant}
  className={`text-left ${className}`}
  titleAccent="underline"
  subtitleMuted={true}
>
  <div class="container">
    <div class="grid gap-10 lg:grid-cols-12">
      <!-- Pasos -->
      <div class="lg:col-span-7">
        <ol class="space-y-10">
          {
            list.map((s, i) => (
              <li class="flex items-start">
                <div
                  class="flex h-16 w-16 shrink-0 items-center justify-center rounded-full
                         bg-white text-[color:var(--color-fg)] text-xl font-semibold
                         ring-1 ring-[color:var(--color-border)]/60
                         shadow-[0_12px_30px_-14px_rgba(0,0,0,0.35)]"
                >
                  {num(i)}
                </div>

                <div class="ml-5 flex-1">
                  <h3 class="text-xl font-semibold tracking-tight text-[color:var(--color-fg)]">
                    {s.title}
                  </h3>

                  <div class="my-3 h-px w-full bg-[color:var(--color-border)]/60" />

                  {s.desc && (
                    <p class="text-[color:var(--color-fg-muted)] leading-relaxed">
                      {s.desc}
                    </p>
                  )}
                </div>
              </li>
            ))
          }
        </ol>
      </div>

      <!-- Media / Ilustración -->
      <aside class="lg:col-span-5">
        <div
          class="relative overflow-hidden rounded-3xl border border-[color:var(--color-border)]/60
                 bg-[color:var(--color-bg-elev)] shadow-[0_20px_60px_-24px_rgba(0,0,0,0.25)]"
        >
          <!-- Deco punteada arriba-izquierda -->
          <i
            aria-hidden="true"
            class="absolute -top-3 -left-3 h-14 w-24 text-[color:var(--color-primary)]/70
                   [background:radial-gradient(currentColor_2px,transparent_2px)]
                   [background-size:12px_12px]"
          ></i>

          {
            media?.image ? (
              <img
                src={media.image}
                alt={media.alt || "Ilustración del proceso"}
                loading="lazy"
                class="block h-full w-full object-cover"
              />
            ) : (
              <div
                class="aspect-[4/3] w-full
                     bg-[radial-gradient(1200px_600px_at_-10%_-10%,hsl(var(--primary-200,220_90%_80%))/40%,transparent_60%),radial-gradient(800px_400px_at_120%_120%,hsl(var(--primary-500,220_85%_55%))/25%,transparent_55%)]
                     opacity-90"
              />
            )
          }
        </div>
      </aside>
    </div>
  </div>
</Section>
