---
/**
 * Process.astro — Pasos del proceso
 *
 * Props:
 * - id?: string
 * - title?: string
 * - subtitle?: string
 * - steps?: string[]   (default: ["Brief", "Diseño", "Implementación", "QA", "Go Live"])
 * - variant?: "default"|"alt"|"inverted"
 * - className?: string
 */

import Section from "@/components/ui/Section.astro";
import type { BaseSectionProps, Variant } from "@/utils/section-types";

interface Props extends BaseSectionProps {
  title?: string;
  subtitle?: string;
  steps?: string[];
  variant?: Variant;
}

const {
  id = "process",
  title = "Proceso",
  subtitle = "Así trabajamos de inicio a fin",
  steps = ["Brief", "Diseño", "Implementación", "QA", "Go Live"],
  variant = "default" as Variant,
  className = "",
} = Astro.props as Props;
---

<Section id={id} title={title} subtitle={subtitle} variant={variant} className={className}>
  <div class="container">
    <ol
      class="relative mt-8 grid gap-8 md:grid-cols-5 md:gap-6"
      style="counter-reset: step;"
    >
      {steps.map((s, i) => (
        <li
          class="relative flex flex-col items-center text-center card p-6"
          style="counter-increment: step;"
        >
          <!-- Número con círculo -->
          <div
            class="flex h-12 w-12 items-center justify-center rounded-full
                   bg-[color:var(--color-primary)] text-[color:var(--color-on-primary)]
                   text-lg font-semibold shadow-[var(--shadow-sm)]"
          >
            {i + 1}
          </div>

          <!-- Título -->
          <p class="mt-3 font-medium">{s}</p>

          <!-- Línea de conexión (solo en desktop, excepto el último) -->
          {i < steps.length - 1 && (
            <span
              class="hidden md:block absolute top-6 left-[calc(50%+1.5rem)] right-0 h-[2px]
                     bg-[color:var(--color-border)]"
              aria-hidden="true"
            ></span>
          )}
        </li>
      ))}
    </ol>
  </div>
</Section>
