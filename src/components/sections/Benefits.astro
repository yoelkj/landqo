---
import Section from "@/components/ui/Section.astro";
import type { BaseSectionProps, Variant } from "@/utils/section-types";

type BenefitItem = {
  title: string;
  description?: string;
  icon?: string; // SVG inline "<svg ...>...</svg>"
  href?: string; // opcional (no se usa como link en UI informativa)
};

interface Props extends BaseSectionProps {
  items?: Array<BenefitItem>;
  cols?: 2 | 3 | 4;
  dense?: boolean;
  styleVariant?: "accent-fill" | "outline" | "minimal";
}

const {
  id = "benefits",
  title = "Beneficios",
  subtitle,
  variant = "default" as Variant,
  className = "",
  items = [],
  cols = 3,
  dense = false,
  styleVariant = "accent-fill",
} = Astro.props as Props;

const isInlineSvg = (s?: string) =>
  !!s && s.trim().startsWith("<") && s.toLowerCase().includes("<svg");

const defaultIcon =
  '<svg viewBox="0 0 24 24" aria-hidden="true"><path fill="currentColor" d="M9.5 16.2l-3.7-3.7 1.4-1.4 2.3 2.3 6-6 1.4 1.4z"/></svg>';

const gridCols =
  cols === 4
    ? "sm:grid-cols-2 lg:grid-cols-4"
    : cols === 2
      ? "sm:grid-cols-2 lg:grid-cols-2"
      : "sm:grid-cols-2 lg:grid-cols-3";

const pad = dense ? "p-5" : "p-6";
const gap = dense ? "gap-5" : "gap-6";

const cardBase =
  "group relative h-full overflow-hidden rounded-3xl transition-all duration-300 will-change-transform";
const cardByStyle =
  styleVariant === "accent-fill"
    ? "border border-[var(--color-border)]/50 bg-[var(--color-surface,transparent)]/90 shadow-[0_6px_30px_-12px_rgba(0,0,0,0.18)] hover:-translate-y-[4px] hover:shadow-[0_18px_48px_-16px_rgba(0,0,0,0.28)] hover:bg-[var(--color-primary)]"
    : styleVariant === "outline"
      ? "border border-[var(--color-border)]/60 bg-[var(--color-surface,transparent)]/75 shadow-[0_6px_24px_-12px_rgba(0,0,0,0.18)] hover:-translate-y-[3px] hover:shadow-[0_14px_40px_-18px_rgba(0,0,0,0.25)]"
      : "border border-transparent bg-[var(--color-surface,transparent)]/60 hover:bg-[var(--color-surface,transparent)]/80 hover:-translate-y-[2px]";

const iconWrapByStyle =
  styleVariant === "accent-fill"
    ? "border border-[var(--color-primary)]/40 bg-[var(--color-primary)]/10 text-[var(--color-primary)] group-hover:border-white/70 group-hover:text-white group-hover:bg-white/10"
    : styleVariant === "outline"
      ? "border border-[var(--color-border)]/60 text-[var(--color-primary)] bg-transparent"
      : "text-[var(--color-primary)]";

const titleHover =
  styleVariant === "accent-fill" ? "group-hover:text-white" : "";
const descHover =
  styleVariant === "accent-fill" ? "group-hover:text-white/85" : "";
---

<Section
  id={id}
  title={title}
  subtitle={subtitle}
  variant={variant}
  className={className}
  titleAccent="underline"
  subtitleMuted={true}
>
  <div class="container">
    <ul role="list" class={`mt-8 grid ${gap} ${gridCols}`}>
      {
        (items || []).map((b) => (
          <li>
            <div class={`${cardBase} ${cardByStyle} ${pad}`}>
              <div
                class={`mb-4 inline-flex h-12 w-12 items-center justify-center rounded-2xl ${iconWrapByStyle}`}
                aria-hidden="true"
              >
                {isInlineSvg(b.icon) ? (
                  <span
                    class="icon [&>svg]:h-6 [&>svg]:w-6 [&>svg]:stroke-current [&>svg]:fill-none [&>svg]:stroke-[1.8]"
                    set:html={b.icon!}
                  />
                ) : (
                  <span
                    class="icon [&>svg]:h-5 [&>svg]:w-5 [&>svg]:stroke-current [&>svg]:fill-none [&>svg]:stroke-[1.8]"
                    set:html={defaultIcon}
                  />
                )}
              </div>

              <h3
                class={`font-semibold tracking-tight text-[color:var(--color-fg)] text-[1.05rem] leading-tight ${titleHover}`}
              >
                {b.title}
              </h3>

              {b.description && (
                <p
                  class={`mt-2 text-sm leading-relaxed text-[color:var(--color-fg-muted)] ${descHover}`}
                >
                  {b.description}
                </p>
              )}
            </div>
          </li>
        ))
      }
    </ul>
  </div>
</Section>
