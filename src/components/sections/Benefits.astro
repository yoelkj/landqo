---
import Section from "@/components/ui/Section.astro";
import type { BaseSectionProps, Variant } from "@/utils/section-types";

/**
 * Props del componente:
 * - id, title, subtitle, variant, className (de BaseSectionProps)
 * - items: Array<string | { title: string; description?: string; icon?: string }>
 * - cols: 2 | 3 | 4 (nÃºmero de columnas en desktop, por defecto 3)
 */

type BenefitItem = {
  title: string;
  description?: string;
  /** icon puede ser:
   *  - emoji (ðŸ’¡)
   *  - texto corto (âœ“)
   *  - SVG inline como string ("<svg ...>...</svg>")
   */
  icon?: string;
};

interface Props extends BaseSectionProps {
  items?: Array<string | BenefitItem>;
  cols?: 2 | 3 | 4;
}

const {
  id = "benefits",
  title = "Beneficios",
  subtitle,
  variant = "default" as Variant,
  className = "",
  items = ["Velocidad", "SEO listo", "Responsivo"],
  cols = 3,
} = Astro.props as Props;

// Normaliza items (strings -> objetos)
const list: BenefitItem[] = (items || []).map((it) =>
  typeof it === "string" ? ({ title: it } as BenefitItem) : it
);

// Grid responsive segÃºn cols (desktop). Mantenemos 1 col en mobile, 2 en sm.
const gridCols =
  cols === 4
    ? "sm:grid-cols-2 lg:grid-cols-4"
    : cols === 2
    ? "sm:grid-cols-2 lg:grid-cols-2"
    : "sm:grid-cols-2 lg:grid-cols-3"; // default 3

// Render icon helper
const isInlineSvg = (s?: string) =>
  !!s && s.trim().startsWith("<") && s.toLowerCase().includes("<svg");

const defaultIcon =
  '<svg viewBox="0 0 24 24" aria-hidden="true" class="h-5 w-5"><path fill="currentColor" d="M9.5 16.2l-3.7-3.7 1.4-1.4 2.3 2.3 6-6 1.4 1.4z"/></svg>';
---

<Section id={id} title={title} subtitle={subtitle} variant={variant} className={className}>
  <div class="container">
    <ul class={`mt-8 grid gap-6 ${gridCols}`}>
      {
        list.map((b) => (
          <li class="group card p-6 h-full transition-transform will-change-transform">
            <!-- Icono -->
            <div
              class="mb-3 inline-flex h-9 w-9 items-center justify-center rounded-full
                     bg-[color:var(--color-primary)]/12 text-[color:var(--color-primary)]
                     ring-1 ring-[color:var(--color-border)]/50
                     group-hover:scale-105 transition-transform duration-200"
              aria-hidden="true"
            >
              {
                isInlineSvg(b.icon)
                  ? <span set:html={b.icon!} />
                  : <span class="font-semibold leading-none">{b.icon ?? "âœ“"}</span>
              }
            </div>

            <!-- TÃ­tulo y descripciÃ³n -->
            <h3 class="font-semibold tracking-tight">{b.title}</h3>
            {b.description && (
              <p class="mt-2 text-sm text-[color:var(--color-fg-muted)]">
                {b.description}
              </p>
            )}
          </li>
        ))
      }
    </ul>
  </div>
</Section>
