---
import Section from "@/components/ui/Section.astro";
import type { TemplateCard } from "@/content/sections/templates";

const {
  id = "templates",
  title = "Plantillas",
  subtitle = "",
  ctaLabel = "Solicitar cat치logo",
  ctaHref = "#contacto",
  filters = [],
  items = [],
  className = "",
} = Astro.props as {
  id?: string;
  title?: string;
  subtitle?: string;
  ctaLabel?: string;
  ctaHref?: string;
  filters?: string[];
  items?: TemplateCard[];
  className?: string;
};

const hasItems = Array.isArray(items) && items.length > 0;
const hasFilters = hasItems && Array.isArray(filters) && filters.length > 0;
const uiFilters = hasFilters ? (filters[0] === "Todos" ? filters : ["Todos", ...filters]) : [];
---

<Section
  id={id}
  title={title}
  subtitle={subtitle}
  className={className}
  titleAccent="underline"
  subtitleMuted
>
  <div class="container">
    {!hasItems && (
      <div class="mx-auto max-w-2xl rounded-3xl border border-[color:var(--color-border)]/60 bg-[color:var(--color-surface)]/70 p-8 text-center">
        <div class="mx-auto mb-4 inline-flex h-14 w-14 items-center justify-center rounded-2xl border border-[color:var(--color-border)]/60 text-[color:var(--color-primary)]">
          <svg viewBox="0 0 24 24" class="h-6 w-6" fill="none" stroke="currentColor" stroke-width="1.8">
            <path d="M4 7h16M4 12h10M4 17h7" stroke-linecap="round" />
          </svg>
        </div>
        <h3 class="text-lg font-semibold tracking-tight">Cat치logo en preparaci칩n</h3>
        <p class="mt-2 text-[color:var(--color-fg-muted)]">
          Estamos maquetando las primeras plantillas de Landqo. Si quieres ver opciones o recibir propuestas, cont치ctanos y te enviamos un preview.
        </p>
        <div class="mt-5">
          <a href={ctaHref} class="btn btn-primary h-11 rounded-xl px-4">{ctaLabel}</a>
        </div>
      </div>
    )}

    {uiFilters.length > 0 && (
      <div class="mb-8 mt-2 flex flex-wrap items-center justify-center gap-2" aria-label="Filtros de plantillas">
        {uiFilters.map((f, i) => (
          <button
            class="h-10 rounded-full border border-[color:var(--color-border)]/60 bg-[color:var(--color-surface)]/70 px-4 text-sm transition-colors hover:bg-[color:var(--color-primary)]/10 data-[active=true]:bg-[color:var(--color-primary)]/12 data-[active=true]:border-[color:var(--color-primary)]/30"
            data-filter={f}
            data-active={i === 0 ? "true" : "false"}
            aria-pressed={i === 0 ? "true" : "false"}
            type="button"
          >
            {f}
          </button>
        ))}
      </div>
    )}

    {hasItems && (
      <div id="tplGrid" class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
        {items.map((t) => (
          <article
            class="tpl group"
            data-item
            data-industry={t.industry}
            style={t.color ? `--accent:${t.color};` : ""}
          >
            <!-- Preview (sin CTA overlay) -->
            <a
              href={t.url || ctaHref}
              target="_blank"
              rel="noopener noreferrer"
              class="shot block focus:outline-none"
            >
              {t.image && (
                <img
                  src={t.image}
                  alt={t.name}
                  loading="lazy"
                  class="shot__img"
                  onerror="this.style.display='none'; this.parentElement.classList.add('shot--fallback');"
                />
              )}

              <!-- Fade inferior sutil para cohesionar capturas -->
              <span class="shot__fade" aria-hidden="true"></span>

              <!-- Badge sobre imagen (vidrioso) -->
              {t.industry && (
                <span class="shot__badge">{t.industry}</span>
              )}
            </a>

            <!-- Meta -->
            <div class="meta">
              <div class="meta__head">
                <h3 class="meta__title">{t.name}</h3>
                {t.industry && (
                  <span class="chip" style={t.color ? `--chip:${t.color};` : ""}>{t.industry}</span>
                )}
              </div>

              {Array.isArray(t.features) && t.features.length > 0 && (
                <ul class="meta__list">
                  {t.features.slice(0, 3).map((f) => (
                    <li class="meta__li">
                      <span class="dot"></span>
                      <span>{f}</span>
                    </li>
                  ))}
                </ul>
              )}

              <div class="meta__actions">
                {t.url ? (
                  <a
                    href={t.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="btn btn-outline h-10 px-3 rounded-xl"
                  >
                    Ver demo
                  </a>
                ) : null}
                <a href={ctaHref} class="btn btn-primary h-10 px-3 rounded-xl">
                  {ctaLabel}
                </a>
              </div>
            </div>
          </article>
        ))}
      </div>
    )}
  </div>

  {hasItems && (
    <script is:inline>
      (function () {
        var grid = document.getElementById("tplGrid");
        if (!grid) return;
        var buttons = Array.prototype.slice.call(document.querySelectorAll("[data-filter]"));
        var cards = Array.prototype.slice.call(grid.querySelectorAll("[data-item]"));

        function setActive(btn) {
          buttons.forEach(function (b) {
            b.dataset.active = "false";
            b.setAttribute("aria-pressed", "false");
          });
          if (btn) { btn.dataset.active = "true"; btn.setAttribute("aria-pressed", "true"); }
        }
        function applyFilter(val) {
          cards.forEach(function (c) {
            var cat = c.getAttribute("data-industry") || "";
            c.style.display = (val === "Todos" || val === cat) ? "" : "none";
          });
        }
        buttons.forEach(function (btn) {
          btn.addEventListener("click", function () {
            var val = btn.getAttribute("data-filter") || "Todos";
            setActive(btn);
            applyFilter(val);
          });
        });
        var first = buttons[0];
        if (first) { setActive(first); applyFilter(first.getAttribute("data-filter") || "Todos"); }
      })();
    </script>
  )}

  <style is:inline>
    /* ===== Card coherente con la UI global ===== */
    .tpl{
      position:relative;
      border-radius:22px;
      background: var(--color-surface);
      border:1px solid color-mix(in oklch, var(--color-border) 85%, transparent);
      box-shadow:
        0 1px 2px hsl(220 3% 15% / .06),
        0 12px 34px hsl(220 8% 10% / .08);
      overflow:hidden;
      transition: transform .22s ease, box-shadow .22s ease, border-color .22s ease;
    }
    .tpl:hover{
      transform: translateY(-2px);
      border-color: color-mix(in oklch, var(--accent, var(--color-primary)) 26%, var(--color-border));
      box-shadow:
        0 4px 18px hsl(220 10% 10% / .10),
        0 26px 66px hsl(220 10% 10% / .12);
    }

    /* ===== Preview minimal ===== */
    .shot{
      position:relative;
      margin:12px 12px 0;
      border-radius:16px;
      overflow:hidden;
      aspect-ratio:16/10;
      background: var(--color-bg-elev);
      box-shadow: inset 0 0 0 1px color-mix(in oklch, var(--color-border) 70%, transparent);
    }
    .shot__img{
      width:100%; height:100%; object-fit:cover;
      transition: transform .35s ease, filter .35s ease;
    }
    .group:hover .shot__img{ transform: scale(1.015); filter:saturate(1.02); }

    /* Fade inferior sutil para cohesionar capturas */
    .shot__fade{
      position:absolute; inset-inline:0; bottom:0; height:36%;
      background: linear-gradient(180deg, transparent 0%, rgba(0,0,0,.02) 30%, rgba(0,0,0,.06) 100%);
      pointer-events:none;
    }

    /* Badge sobre imagen */
    .shot__badge{
      position:absolute; top:10px; right:10px;
      padding:.28rem .55rem; font-size:.72rem; font-weight:700;
      border-radius:999px;
      color: var(--color-fg);
      background: color-mix(in oklch, var(--color-bg-elev) 86%, transparent);
      border:1px solid color-mix(in oklch, var(--color-border) 60%, transparent);
      backdrop-filter:saturate(1.4) blur(4px);
    }

    .shot--fallback{
      background: var(--color-bg-elev);
    }

    /* ===== Meta ===== */
    .meta{ padding:16px 16px 18px; }
    .meta__head{ display:flex; align-items:flex-start; justify-content:space-between; gap:12px; }
    .meta__title{ font-weight:600; letter-spacing:-.01em; font-size:clamp(1rem, .96rem + .3vw, 1.1rem); }

    .chip{
      display:inline-flex; align-items:center; height:24px; padding:0 .5rem; border-radius:8px;
      font-size:.68rem; font-weight:700;
      background: var(--color-bg-elev); color: var(--color-fg);
      box-shadow: inset 0 0 0 1px var(--color-border);
    }
    .chip[style*="--chip"]{
      color: color-mix(in oklch, var(--chip) 64%, var(--color-fg));
      background: color-mix(in oklch, var(--chip) 12%, var(--color-bg-elev));
      box-shadow: inset 0 0 0 1px color-mix(in oklch, var(--chip) 38%, var(--color-border));
    }

    .meta__list{ margin-top:.45rem; color: var(--color-fg-muted); display:grid; gap:.38rem; font-size:.93rem; }
    .meta__li{ display:flex; align-items:flex-start; gap:.5rem; }
    .dot{ margin-top:.5rem; width:.35rem; height:.35rem; border-radius:999px; background: color-mix(in oklch, var(--accent, var(--color-primary)) 70%, var(--color-primary)); }

    .meta__actions{ margin-top:.75rem; display:flex; gap:.5rem; }
  </style>
</Section>
